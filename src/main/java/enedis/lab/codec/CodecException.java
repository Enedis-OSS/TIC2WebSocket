// Copyright (C) 2025 Enedis Smarties team <dt-dsi-nexus-lab-smarties@enedis.fr>
// 
// SPDX-FileContributor: Jehan BOUSCH
// SPDX-FileContributor: Mathieu SABARTHES
//
// SPDX-License-Identifier: Apache-2.0

package enedis.lab.codec;

/**
 * Codec exception
 */
public class CodecException extends Exception
{

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// CONSTANTS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private static final long	serialVersionUID	= 6029680699870915485L;

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// TYPES
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// STATIC METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// ATTRIBUTES
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private Object				data;

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// CONSTRUCTORS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * Default constructor
	 */
	public CodecException()
	{
		super();
	}

	/**
	 * Constructor
	 *
	 * @param message
	 * @param cause
	 */
	public CodecException(String message, Throwable cause)
	{
		super(message, cause);
	}

	/**
	 * Constructor
	 *
	 * @param message
	 */
	public CodecException(String message)
	{
		super(message);
	}

	/**
	 * Constructor
	 *
	 * @param message
	 * @param data
	 */
	public CodecException(String message, Object data)
	{
		super(message);
		this.data = data;
	}

	/**
	 * Constructor
	 *
	 * @param cause
	 */
	public CodecException(Throwable cause)
	{
		super(cause);
	}

	/**
	 * Raise CodecException invalid value
	 *
	 * @param info
	 * @throws CodecException
	 */
	public static void raiseInvalidValue(String info) throws CodecException
	{
		throw new CodecException("Invalid value : " + info);
	}

	/**
	 * Raise CodecException missing value
	 *
	 * @param value
	 * @throws CodecException
	 */
	public static void raiseMissingValue(String value) throws CodecException
	{
		throw new CodecException("Missing value : " + value);
	}

	/**
	 * Raise CodecException inconsistency
	 *
	 * @param info
	 * @throws CodecException
	 */
	public static void raiseInconsistency(String info) throws CodecException
	{
		throw new CodecException("Inconsistency : " + info);
	}

	/**
	 * Get data
	 *
	 * @return data
	 */
	public Object getData()
	{
		return this.data;
	}

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// INTERFACE
	/// interfaceName
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// PUBLIC METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// PROTECTED METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// PRIVATE METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
