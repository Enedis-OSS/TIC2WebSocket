// Copyright (C) 2025 Enedis Smarties team <dt-dsi-nexus-lab-smarties@enedis.fr>
//
// SPDX-FileContributor: Jehan BOUSCH
// SPDX-FileContributor: Mathieu SABARTHES
//
// SPDX-License-Identifier: Apache-2.0

package enedis.lab.io.channels;

import enedis.lab.util.task.Notifier;
import enedis.lab.util.task.Task;

/**
 * Channel interface
 */
public interface Channel extends Task, Notifier<ChannelListener>
{
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// CONSTANTS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// TYPES
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// PUBLIC METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * Setup the channel from a configuration
	 *
	 * @param configuration
	 *            the channel configuration
	 *
	 * @throws ChannelException
	 */
	public void setup(ChannelConfiguration configuration) throws ChannelException;

	/**
	 * Read data on the channel
	 *
	 * @return bytes
	 * @throws ChannelException
	 */
	public byte[] read() throws ChannelException;

	/**
	 * Write data on the channel
	 *
	 * @param data
	 * @throws ChannelException
	 */
	public void write(byte[] data) throws ChannelException;

	/**
	 * Get the channel name
	 *
	 * @return the channel's name
	 */
	public String getName();

	/**
	 * Get the channel protocol
	 *
	 * @return the protocol used by the channel
	 */
	public ChannelProtocol getProtocol();

	/**
	 * Get the channel direction
	 *
	 * @return the direction of the channel
	 */
	public ChannelDirection getDirection();

	/**
	 * Get channel status
	 *
	 * @return the channel's status
	 */
	public ChannelStatus getStatus();

	/**
	 * Get channel configuration
	 *
	 * @return channel configuration
	 */
	public ChannelConfiguration getConfiguration();

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// PROTECTED METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// none

	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// PRIVATE METHODS
	///
	/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// none
}
